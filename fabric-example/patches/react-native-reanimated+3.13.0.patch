diff --git a/node_modules/react-native-reanimated/android/src/main/java/com/swmansion/reanimated/ReactNativeUtils.java b/node_modules/react-native-reanimated/android/src/main/java/com/swmansion/reanimated/ReactNativeUtils.java
index 3667652..c8b34d4 100644
--- a/node_modules/react-native-reanimated/android/src/main/java/com/swmansion/reanimated/ReactNativeUtils.java
+++ b/node_modules/react-native-reanimated/android/src/main/java/com/swmansion/reanimated/ReactNativeUtils.java
@@ -3,6 +3,9 @@ package com.swmansion.reanimated;
 import android.graphics.drawable.Drawable;
 import android.view.View;
 import com.facebook.react.views.image.ReactImageView;
+import com.facebook.react.uimanager.drawable.CSSBackgroundDrawable;
+import com.facebook.react.uimanager.style.BorderRadiusProp;
+import com.facebook.react.uimanager.style.ComputedBorderRadius;
 import com.facebook.react.views.view.ReactViewBackgroundDrawable;
 import java.lang.reflect.Field;
 import java.lang.reflect.InvocationTargetException;
@@ -29,15 +32,15 @@ public class ReactNativeUtils {
   public static BorderRadii getBorderRadii(View view) {
     if (view.getBackground() != null) {
       Drawable background = view.getBackground();
-      if (background instanceof ReactViewBackgroundDrawable) {
-        ReactViewBackgroundDrawable drawable = (ReactViewBackgroundDrawable) background;
+      if (background instanceof CSSBackgroundDrawable drawable) {
+        ComputedBorderRadius computedBorderRadius = drawable.getComputedBorderRadius();
         return new BorderRadii(
-            drawable.getFullBorderRadius(),
-            drawable.getBorderRadius(ReactViewBackgroundDrawable.BorderRadiusLocation.TOP_LEFT),
-            drawable.getBorderRadius(ReactViewBackgroundDrawable.BorderRadiusLocation.TOP_RIGHT),
-            drawable.getBorderRadius(ReactViewBackgroundDrawable.BorderRadiusLocation.BOTTOM_LEFT),
-            drawable.getBorderRadius(
-                ReactViewBackgroundDrawable.BorderRadiusLocation.BOTTOM_RIGHT));
+                // TODO: get full border radius
+                computedBorderRadius.getTopLeft(),
+                computedBorderRadius.getTopLeft(),
+                computedBorderRadius.getTopRight(),
+                computedBorderRadius.getBottomLeft(),
+                computedBorderRadius.getBottomRight());
       }
     } else if (view instanceof ReactImageView) {
       try {
diff --git a/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/ReactFeatureFlagsWrapper/latest/com/swmansion/reanimated/ReactFeatureFlagsWrapper.java b/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/ReactFeatureFlagsWrapper/latest/com/swmansion/reanimated/ReactFeatureFlagsWrapper.java
deleted file mode 100644
index a6a2c16..0000000
--- a/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/ReactFeatureFlagsWrapper/latest/com/swmansion/reanimated/ReactFeatureFlagsWrapper.java
+++ /dev/null
@@ -1,11 +0,0 @@
-package com.swmansion.reanimated;
-
-import com.facebook.react.config.ReactFeatureFlags;
-
-public class ReactFeatureFlagsWrapper {
-
-  public static void enableMountHooks() {
-    ReactFeatureFlags.enableMountHooks = true;
-  }
-
-}
diff --git a/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/ReanimatedUIManager/latest/com/swmansion/reanimated/layoutReanimation/ReanimatedUIManager.java b/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/ReanimatedUIManager/latest/com/swmansion/reanimated/layoutReanimation/ReanimatedUIManager.java
index 256906f..9c84f87 100644
--- a/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/ReanimatedUIManager/latest/com/swmansion/reanimated/layoutReanimation/ReanimatedUIManager.java
+++ b/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/ReanimatedUIManager/latest/com/swmansion/reanimated/layoutReanimation/ReanimatedUIManager.java
@@ -125,22 +125,6 @@ public class ReanimatedUIManager extends UIManagerModule {
     super.measureLayout(tag, ancestorTag, errorCallback, successCallback);
   }
 
-  /**
-   * Like {@link #measure} and {@link #measureLayout} but measures relative to the immediate parent.
-   *
-   * <p>NB: Unlike {@link #measure}, this will measure relative to the view layout, not the visible
-   * window which can cause unexpected results when measuring relative to things like ScrollViews
-   * that can have offset content on the screen.
-   *
-   * @deprecated this method will not be available in FabricUIManager class.
-   */
-  @ReactMethod
-  @Deprecated
-  public void measureLayoutRelativeToParent(
-      int tag, Callback errorCallback, Callback successCallback) {
-    super.measureLayoutRelativeToParent(tag, errorCallback, successCallback);
-  }
-
   /**
    * Find the touch target child native view in the supplied root view hierarchy, given a react
    * target location.
@@ -186,26 +170,6 @@ public class ReanimatedUIManager extends UIManagerModule {
     super.dispatchViewManagerCommand(reactTag, commandId, commandArgs);
   }
 
-  /**
-   * Show a PopupMenu.
-   *
-   * @param reactTag the tag of the anchor view (the PopupMenu is displayed next to this view); this
-   *     needs to be the tag of a native view (shadow views can not be anchors)
-   * @param items the menu items as an array of strings
-   * @param error will be called if there is an error displaying the menu
-   * @param success will be called with the position of the selected item as the first argument, or
-   *     no arguments if the menu is dismissed
-   */
-  @ReactMethod
-  public void showPopupMenu(int reactTag, ReadableArray items, Callback error, Callback success) {
-    super.showPopupMenu(reactTag, items, error, success);
-  }
-
-  @ReactMethod
-  public void dismissPopupMenu() {
-    super.dismissPopupMenu();
-  }
-
   /**
    * LayoutAnimation API on Android is currently experimental. Therefore, it needs to be enabled
    * explicitly in order to avoid regression in existing application written for iOS using this API.
diff --git a/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/RuntimeExecutor/latest/com/swmansion/reanimated/NativeProxy.java b/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/RuntimeExecutor/latest/com/swmansion/reanimated/NativeProxy.java
index 3902e82..673b2bb 100644
--- a/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/RuntimeExecutor/latest/com/swmansion/reanimated/NativeProxy.java
+++ b/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/RuntimeExecutor/latest/com/swmansion/reanimated/NativeProxy.java
@@ -26,7 +26,6 @@ public class NativeProxy extends NativeProxyCommon {
 
     public @OptIn(markerClass = FrameworkAPI.class) NativeProxy(ReactApplicationContext context, String valueUnpackerCode) {
         super(context);
-        ReactFeatureFlagsWrapper.enableMountHooks();
 
         FabricUIManager fabricUIManager =
                 (FabricUIManager) UIManagerHelper.getUIManager(context, UIManagerType.FABRIC);
@@ -37,7 +36,7 @@ public class NativeProxy extends NativeProxyCommon {
 
 
         if (context.isBridgeless()) {
-            RuntimeExecutor runtimeExecutor = context.getRuntimeExecutor();
+            RuntimeExecutor runtimeExecutor = context.getCatalystInstance().getRuntimeExecutor();
             mHybridData = initHybridBridgeless(
               Objects.requireNonNull(context.getJavaScriptContextHolder()).get(),
               runtimeExecutor,
